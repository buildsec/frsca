---
name: CI
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths-ignore:
      - "docs/**"
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: mfinelli/setup-shfmt@v1
      - name: Lint all
        run: make lint

  setup:
    runs-on: ubuntu-latest
    needs:
      lint
    name: Test SSF Installation
    steps:
      - uses: actions/checkout@v2
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: "1.17.6"
      - name: Vendor Dependencies
        run: ./platform/vendor/vendor.sh
      - name: Check commit is clean
        run: test -z "$(git status --porcelain)" || (git status; git diff; false)
      - name: Start minikube
        run: |
          make setup-minikube
      - name: Try the cluster !
        run: kubectl get pods -A
      - name: Deploy SSF to minikube
        run: |
          make setup-tekton-chains
      - name: Generate temp keys
        run: |
          make tekton-generate-keys
      - name: Setup Kyverno
        run: |
          make setup-kyverno
      - name: Run buildpacks pipeline
        run: |
          ./examples/buildpacks/buildpacks.sh
          export DOCKER_IMG=$(tkn pr describe --last -o jsonpath='{.spec.params[?(@.name=="APP_IMAGE")].value}')
          tkn pr logs --last -f
          sleep 60
          docker run --rm gcr.io/go-containerregistry/crane ls $DOCKER_IMG
          tkn tr describe --last -o json | jq -r '.metadata.annotations["chains.tekton.dev/signed"]'
          cosign verify --key k8s://tekton-chains/signing-secrets ${DOCKER_IMG}
          cosign verify-attestation --key k8s://tekton-chains/signing-secrets ${DOCKER_IMG}
      - name: Run sample pipeline to test kyverno
        run: |
          make example-sample-pipeline
          export IMAGE_URL=$(tkn pr describe --last -o jsonpath='{.spec.params[?(@.name=="imageUrl")].value}')
          export IMAGE_TAG=$(tkn pr describe --last -o jsonpath='{.spec.params[?(@.name=="imageTag")].value}')
          export DOCKER_IMG="${IMAGE_URL}:${IMAGE_TAG}"

          tkn pr logs --last -f
          sleep 60
          docker run --rm gcr.io/go-containerregistry/crane ls "${IMAGE_URL}"

          cosign verify --key k8s://tekton-chains/signing-secrets "${DOCKER_IMG}"
          cosign verify-attestation --key k8s://tekton-chains/signing-secrets "${DOCKER_IMG}"

          kubectl wait --timeout=5m --for=condition=ready pods -l app=picalc -n prod
