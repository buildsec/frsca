// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/kyverno/kyverno/api/kyverno/v1

package v1

import apiextv1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"

#ImageExtractorConfigs: [string]: [...#ImageExtractorConfig]

#ImageExtractorConfig: {
	// Path is the path to the object containing the image field in a custom resource.
	// It should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'.
	// Wildcard keys are expanded in case of arrays or objects.
	path: string @go(Path)

	// Value is an optional name of the field within 'path' that points to the image URI.
	// This is useful when a custom 'key' is also defined.
	// +optional
	value?: string @go(Value)

	// Name is the entry the image will be available under 'images.<name>' in the context.
	// If this field is not defined, image entries will appear under 'images.custom'.
	// +optional
	name?: string @go(Name)

	// Key is an optional name of the field within 'path' that will be used to uniquely identify an image.
	// Note - this field MUST be unique.
	// +optional
	key?: string @go(Key)
}

// Rule defines a validation, mutation, or generation control for matching resources.
// Each rules contains a match declaration to select resources, and an optional exclude
// declaration to specify which resources to exclude.
#Rule: {
	// Name is a label to identify the rule, It must be unique within the policy.
	// +kubebuilder:validation:MaxLength=63
	name?: string @go(Name)

	// Context defines variables and data sources that can be used during rule execution.
	// +optional
	context?: [...#ContextEntry] @go(Context,[]ContextEntry)

	// MatchResources defines when this policy rule should be applied. The match
	// criteria can include resource information (e.g. kind, name, namespace, labels)
	// and admission review request information like the user name or role.
	// At least one kind is required.
	match?: #MatchResources @go(MatchResources)

	// ExcludeResources defines when this policy rule should not be applied. The exclude
	// criteria can include resource information (e.g. kind, name, namespace, labels)
	// and admission review request information like the name or role.
	// +optional
	exclude?: #MatchResources @go(ExcludeResources)

	// ImageExtractors defines a mapping from kinds to ImageExtractorConfigs.
	// This config is only valid for verifyImages rules.
	// +optional
	imageExtractors?: #ImageExtractorConfigs @go(ImageExtractors)

	// Preconditions are used to determine if a policy rule should be applied by evaluating a
	// set of conditions. The declaration can contain nested `any` or `all` statements. A direct list
	// of conditions (without `any` or `all` statements is supported for backwards compatibility but
	// will be deprecated in the next major release.
	// See: https://kyverno.io/docs/writing-policies/preconditions/
	// +optional
	preconditions?: null | apiextv1.#JSON @go(RawAnyAllConditions,*apiextv1.JSON)

	// Mutation is used to modify matching resources.
	// +optional
	mutate?: #Mutation @go(Mutation)

	// Validation is used to validate matching resources.
	// +optional
	validate?: #Validation @go(Validation)

	// Generation is used to create new resources.
	// +optional
	generate?: #Generation @go(Generation)

	// VerifyImages is used to verify image signatures and mutate them to add a digest
	// +optional
	verifyImages?: [...#ImageVerification] @go(VerifyImages,[]ImageVerification)
}
