// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/tektoncd/pipeline/pkg/apis/pipeline/v1beta1

package v1beta1

import resource "github.com/tektoncd/pipeline/pkg/apis/resource/v1alpha1"

#ParamsPrefix: "params"

// ParamSpec defines arbitrary parameters needed beyond typed inputs (such as
// resources). Parameter values are provided by users as inputs on a TaskRun
// or PipelineRun.
#ParamSpec: {
	// Name declares the name by which a parameter is referenced.
	name: string @go(Name)

	// Type is the user-specified type of the parameter. The possible types
	// are currently "string", "array" and "object", and "string" is the default.
	// +optional
	type?: #ParamType @go(Type)

	// Description is a user-facing description of the parameter that may be
	// used to populate a UI.
	// +optional
	description?: string @go(Description)

	// Properties is the JSON Schema properties to support key-value pairs parameter.
	// +optional
	properties?: {[string]: #PropertySpec} @go(Properties,map[string]PropertySpec)

	// Default is the value a parameter takes if no input value is supplied. If
	// default is set, a Task may be executed without a supplied value for the
	// parameter.
	// +optional
	default?: null | #ArrayOrString @go(Default,*ArrayOrString)
}

// PropertySpec defines the struct for object keys
#PropertySpec: {
	type?: #ParamType @go(Type)
}

// ResourceParam declares a string value to use for the parameter called Name, and is used in
// the specific context of PipelineResources.
#ResourceParam: resource.#ResourceParam

// Param declares an ArrayOrString to use for the parameter called name.
#Param: {
	name:  string         @go(Name)
	value: #ArrayOrString @go(Value)
}

// ParamType indicates the type of an input parameter;
// Used to distinguish between a single string and an array of strings.
#ParamType: string // #enumParamType

#enumParamType:
	#ParamTypeString |
	#ParamTypeArray |
	#ParamTypeObject

#ParamTypeString: #ParamType & "string"
#ParamTypeArray:  #ParamType & "array"
#ParamTypeObject: #ParamType & "object"

// ArrayOrString is a type that can hold a single string or string array.
// Used in JSON unmarshalling so that a single JSON field can accept
// either an individual string or an array of strings.
// TODO (@chuangw6): This struct will be renamed or be embedded in a new struct to take into
// consideration the object case after the community reaches an agreement on it.
#ArrayOrString: _
