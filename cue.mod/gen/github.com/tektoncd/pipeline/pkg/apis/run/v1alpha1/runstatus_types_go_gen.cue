// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/tektoncd/pipeline/pkg/apis/run/v1alpha1

package v1alpha1

import (
	duckv1 "knative.dev/pkg/apis/duck/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// RunStatus defines the observed state of Run
#RunStatus: {
	duckv1.#Status

	#RunStatusFields
}

// RunStatusFields holds the fields of Run's status.  This is defined
// separately and inlined so that other types can readily consume these fields
// via duck typing.
#RunStatusFields: {
	// StartTime is the time the build is actually started.
	// +optional
	startTime?: null | metav1.#Time @go(StartTime,*metav1.Time)

	// CompletionTime is the time the build completed.
	// +optional
	completionTime?: null | metav1.#Time @go(CompletionTime,*metav1.Time)

	// Results reports any output result values to be consumed by later
	// tasks in a pipeline.
	// +optional
	results?: [...#RunResult] @go(Results,[]RunResult)

	// RetriesStatus contains the history of RunStatus, in case of a retry.
	// +optional
	retriesStatus?: [...#RunStatus] @go(RetriesStatus,[]RunStatus)

	// ExtraFields holds arbitrary fields provided by the custom task
	// controller.
	extraFields?: runtime.#RawExtension @go(ExtraFields)
}

// RunResult used to describe the results of a task
#RunResult: {
	// Name the given name
	name: string @go(Name)

	// Value the given value of the result
	value: string @go(Value)
}
