// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/tektoncd/triggers/pkg/apis/triggers/v1beta1

package v1beta1

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

// TriggerTemplateSpec holds the desired state of TriggerTemplate
#TriggerTemplateSpec: {
	// +listType=atomic
	params?: [...#ParamSpec] @go(Params,[]ParamSpec)

	// +listType=atomic
	resourcetemplates?: [...#TriggerResourceTemplate] @go(ResourceTemplates,[]TriggerResourceTemplate)
}

// TriggerResourceTemplate describes a resource to create
#TriggerResourceTemplate: _

// TriggerTemplateStatus describes the desired state of TriggerTemplate
#TriggerTemplateStatus: {
}

// TriggerTemplate takes parameters and uses them to create CRDs
//
// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +k8s:openapi-gen=true
#TriggerTemplate: {
	metav1.#TypeMeta

	// +optional
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// Spec holds the desired state of the TriggerTemplate from the client
	// +optional
	spec: #TriggerTemplateSpec @go(Spec)

	// +optional
	status?: #TriggerTemplateStatus @go(Status)
}

// TriggerTemplateList contains a list of TriggerTemplate
//
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
#TriggerTemplateList: {
	metav1.#TypeMeta

	// +optional
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#TriggerTemplate] @go(Items,[]TriggerTemplate)
}
