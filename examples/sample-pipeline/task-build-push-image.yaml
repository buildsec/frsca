---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    cosign.sigstore.dev/imageRef: icr.io/gitsecure/kaniko:v1
    tekton.dev/categories: Image Build
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/tags: image-build
  labels:
    app.kubernetes.io/version: "0.2"
  name: kaniko
spec:
  description: |-
    This Task builds source into a container image using Google's kaniko tool.
    Kaniko doesn't depend on a Docker daemon and executes each command within a Dockerfile completely in userspace. This enables building container images in environments that can't easily or securely run a Docker daemon, such as a standard Kubernetes cluster.
  params:
    - description: Name (reference) of the image to build.
      name: IMAGE
    - default: ./Dockerfile
      description: Path to the Dockerfile to build.
      name: DOCKERFILE
    - default: ./
      description: The build context used by Kaniko.
      name: CONTEXT
    - default: ""
      name: EXTRA_ARGS
    - default: gcr.io/kaniko-project/executor:v1.5.1@sha256:c6166717f7fe0b7da44908c986137ecfeab21f31ec3992f6e128fff8a94be8a5
      description: The image on which builds will run (default is v1.5.1)
      name: BUILDER_IMAGE
  results:
    - description: Digest of the image just built.
      name: IMAGE-DIGEST
  steps:
    - args:
        - $(params.EXTRA_ARGS)
        - --dockerfile=$(params.DOCKERFILE)
        - --context=$(workspaces.source.path)/$(params.CONTEXT)
        - --destination=$(params.IMAGE)
        - --oci-layout-path=$(workspaces.source.path)/$(params.CONTEXT)/image-digest
      env:
        - name: DOCKER_CONFIG
          value: /kaniko/.docker/
      image: icr.io/gitsecure/executor:v1.5.1
      name: build-and-push
      securityContext:
        runAsUser: 0
      volumeMounts:
        - mountPath: /kaniko/.docker/
          name: registry-secret
      workingDir: $(workspaces.source.path)
    - args:
        - -images=[{"name":"$(params.IMAGE)","type":"image","url":"$(params.IMAGE)","digest":"","OutputImageDir":"$(workspaces.source.path)/$(params.CONTEXT)/image-digest"}]
        - -terminationMessagePath=$(params.CONTEXT)/image-digested
      command:
        - /ko-app/imagedigestexporter
      image: icr.io/gitsecure/imagedigestexporter:v0.16.2
      name: write-digest
      securityContext:
        runAsUser: 0
      workingDir: $(workspaces.source.path)
    - image: icr.io/gitsecure/jq
      name: digest-to-results
      script: |
        cat $(params.CONTEXT)/image-digested | jq '.[0].value' -rj | tee /tekton/results/IMAGE-DIGEST
      workingDir: $(workspaces.source.path)
  volumes:
    - name: registry-secret
      secret:
        secretName: img-registry-secret
  workspaces:
    - name: source
