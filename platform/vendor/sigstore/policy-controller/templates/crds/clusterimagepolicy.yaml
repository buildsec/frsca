# Copyright 2022 The Sigstore Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterimagepolicies.policy.sigstore.dev
spec:
  conversion:
    strategy: Webhook
    webhook:
      conversionReviewVersions: ["v1beta1", "v1alpha1"]
      clientConfig:
        service:
          name: policy-webhook
          namespace: cosign-system
  group: policy.sigstore.dev
  names:
    kind: ClusterImagePolicy
    plural: clusterimagepolicies
    singular: clusterimagepolicy
    categories:
      - all
      - sigstore
    shortNames:
      - cip
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              description: Spec holds the desired state of the ClusterImagePolicy (from the client).
              type: object
              properties:
                authorities:
                  description: Authorities defines the rules for discovering and validating signatures.
                  type: array
                  items:
                    type: object
                    properties:
                      attestations:
                        description: Attestations is a list of individual attestations for this authority, once the signature for this authority has been verified.
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              description: Name of the attestation. These can then be referenced at the CIP level policy.
                              type: string
                            policy:
                              description: Policy defines all of the matching signatures, and all of the matching attestations (whose attestations are verified).
                              type: object
                              properties:
                                configMapRef:
                                  description: ConfigMapRef defines the reference to a configMap with the policy definition.
                                  type: object
                                  properties:
                                    name:
                                      description: Name is unique within a namespace to reference a configmap resource.
                                      type: string
                                    namespace:
                                      description: Namespace defines the space within which the configmap name must be unique.
                                      type: string
                                data:
                                  description: Data contains the policy definition.
                                  type: string
                                fetchConfigFile:
                                  description: 'FetchConfigFile controls whether ConfigFile will be fetched and made available for CIP level policy evaluation. Note that this only gets evaluated (and hence fetched) iff at least one authority matches. The ConfigFile will then be available in this format: https://github.com/opencontainers/image-spec/blob/main/config.md'
                                  type: boolean
                                includeObjectMeta:
                                  description: IncludeObjectMeta controls whether the ObjectMeta will be included and made available for CIP level policy evalutation. Note that this only gets evaluated iff at least one authority matches.
                                  type: boolean
                                includeSpec:
                                  description: IncludeSpec controls whether resource `Spec` will be included and made available for CIP level policy evaluation. Note that this only gets evaluated iff at least one authority matches. Also note that because Spec may be of a different shape depending on the resource being evaluatied (see MatchResource for filtering) you might want to configure these to match the policy file to ensure the shape of the Spec is what you expect when evaling the policy.
                                  type: boolean
                                includeTypeMeta:
                                  description: IncludeTypeMeta controls whether the TypeMeta will be included and made available for CIP level policy evalutation. Note that this only gets evaluated iff at least one authority matches.
                                  type: boolean
                                type:
                                  description: Which kind of policy this is, currently only rego or cue are supported. Furthermore, only cue is tested :)
                                  type: string
                                url:
                                  description: URL to the policy data.
                                  type: string
                            predicateType:
                              description: PredicateType defines which predicate type to verify. Matches cosign verify-attestation options.
                              type: string
                      ctlog:
                        description: CTLog sets the configuration to verify the authority against a Rekor instance.
                        type: object
                        properties:
                          url:
                            description: URL sets the url to the rekor instance (by default the public rekor.sigstore.dev)
                            type: string
                      key:
                        description: Key defines the type of key to validate the image.
                        type: object
                        properties:
                          data:
                            description: Data contains the inline public key.
                            type: string
                          hashAlgorithm:
                            description: HashAlgorithm always defaults to sha256 if the algorithm hasn't been explicitly set
                            type: string
                          kms:
                            description: KMS contains the KMS url of the public key Supported formats differ based on the KMS system used.
                            type: string
                          secretRef:
                            description: SecretRef sets a reference to a secret with the key.
                            type: object
                            properties:
                              name:
                                description: name is unique within a namespace to reference a secret resource.
                                type: string
                              namespace:
                                description: namespace defines the space within which the secret name must be unique.
                                type: string
                      keyless:
                        description: Keyless sets the configuration to verify the authority against a Fulcio instance.
                        type: object
                        properties:
                          ca-cert:
                            description: CACert sets a reference to CA certificate
                            type: object
                            properties:
                              data:
                                description: Data contains the inline public key.
                                type: string
                              hashAlgorithm:
                                description: HashAlgorithm always defaults to sha256 if the algorithm hasn't been explicitly set
                                type: string
                              kms:
                                description: KMS contains the KMS url of the public key Supported formats differ based on the KMS system used.
                                type: string
                              secretRef:
                                description: SecretRef sets a reference to a secret with the key.
                                type: object
                                properties:
                                  name:
                                    description: name is unique within a namespace to reference a secret resource.
                                    type: string
                                  namespace:
                                    description: namespace defines the space within which the secret name must be unique.
                                    type: string
                          identities:
                            description: Identities sets a list of identities.
                            type: array
                            items:
                              type: object
                              properties:
                                issuer:
                                  description: Issuer defines the issuer for this identity.
                                  type: string
                                issuerRegExp:
                                  description: IssuerRegExp specifies a regular expression to match the issuer for this identity.
                                  type: string
                                subject:
                                  description: Subject defines the subject for this identity.
                                  type: string
                                subjectRegExp:
                                  description: SubjectRegExp specifies a regular expression to match the subject for this identity.
                                  type: string
                          url:
                            description: URL defines a url to the keyless instance.
                            type: string
                      name:
                        description: Name is the name for this authority. Used by the CIP Policy validator to be able to reference matching signature or attestation verifications. If not specified, the name will be authority-<index in array>
                        type: string
                      source:
                        description: Sources sets the configuration to specify the sources from where to consume the signatures.
                        type: array
                        items:
                          type: object
                          properties:
                            oci:
                              description: OCI defines the registry from where to pull the signatures.
                              type: string
                            signaturePullSecrets:
                              description: SignaturePullSecrets is an optional list of references to secrets in the same namespace as the deploying resource for pulling any of the signatures used by this Source.
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                      static:
                        description: Static specifies that signatures / attestations are not validated but instead a static policy is applied against matching images.
                        type: object
                        properties:
                          action:
                            description: Action defines how to handle a matching policy.
                            type: string
                images:
                  description: Images defines the patterns of image names that should be subject to this policy.
                  type: array
                  items:
                    type: object
                    properties:
                      glob:
                        description: Glob defines a globbing pattern.
                        type: string
                match:
                  description: Match allows selecting resources based on their properties.
                  type: array
                  items:
                    type: object
                    properties:
                      group:
                        type: string
                      resource:
                        type: string
                      selector:
                        type: object
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            type: array
                            items:
                              type: object
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  type: array
                                  items:
                                    type: string
                          matchLabels:
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                      version:
                        type: string
                mode:
                  description: Mode controls whether a failing policy will be rejected (not admitted), or if errors are converted to Warnings. enforce - Reject (default) warn - allow but warn
                  type: string
                policy:
                  description: Policy is an optional policy that can be applied against all the successfully validated Authorities. If no authorities pass, this does not even get evaluated, as the Policy is considered failed.
                  type: object
                  properties:
                    configMapRef:
                      description: ConfigMapRef defines the reference to a configMap with the policy definition.
                      type: object
                      properties:
                        name:
                          description: Name is unique within a namespace to reference a configmap resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the configmap name must be unique.
                          type: string
                    data:
                      description: Data contains the policy definition.
                      type: string
                    fetchConfigFile:
                      description: 'FetchConfigFile controls whether ConfigFile will be fetched and made available for CIP level policy evaluation. Note that this only gets evaluated (and hence fetched) iff at least one authority matches. The ConfigFile will then be available in this format: https://github.com/opencontainers/image-spec/blob/main/config.md'
                      type: boolean
                    includeObjectMeta:
                      description: IncludeObjectMeta controls whether the ObjectMeta will be included and made available for CIP level policy evalutation. Note that this only gets evaluated iff at least one authority matches.
                      type: boolean
                    includeSpec:
                      description: IncludeSpec controls whether resource `Spec` will be included and made available for CIP level policy evaluation. Note that this only gets evaluated iff at least one authority matches. Also note that because Spec may be of a different shape depending on the resource being evaluatied (see MatchResource for filtering) you might want to configure these to match the policy file to ensure the shape of the Spec is what you expect when evaling the policy.
                      type: boolean
                    includeTypeMeta:
                      description: IncludeTypeMeta controls whether the TypeMeta will be included and made available for CIP level policy evalutation. Note that this only gets evaluated iff at least one authority matches.
                      type: boolean
                    type:
                      description: Which kind of policy this is, currently only rego or cue are supported. Furthermore, only cue is tested :)
                      type: string
                    url:
                      description: URL to the policy data.
                      type: string
    - name: v1beta1
      served: true
      storage: false
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              description: Spec holds the desired state of the ClusterImagePolicy (from the client).
              type: object
              properties:
                authorities:
                  description: Authorities defines the rules for discovering and validating signatures.
                  type: array
                  items:
                    type: object
                    properties:
                      attestations:
                        description: Attestations is a list of individual attestations for this authority, once the signature for this authority has been verified.
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              description: Name of the attestation. These can then be referenced at the CIP level policy.
                              type: string
                            policy:
                              description: Policy defines all of the matching signatures, and all of the matching attestations (whose attestations are verified).
                              type: object
                              properties:
                                configMapRef:
                                  description: ConfigMapRef defines the reference to a configMap with the policy definition.
                                  type: object
                                  properties:
                                    name:
                                      description: Name is unique within a namespace to reference a configmap resource.
                                      type: string
                                    namespace:
                                      description: Namespace defines the space within which the configmap name must be unique.
                                      type: string
                                data:
                                  description: Data contains the policy definition.
                                  type: string
                                fetchConfigFile:
                                  description: 'FetchConfigFile controls whether ConfigFile will be fetched and made available for CIP level policy evaluation. Note that this only gets evaluated (and hence fetched) iff at least one authority matches. The ConfigFile will then be available in this format: https://github.com/opencontainers/image-spec/blob/main/config.md'
                                  type: boolean
                                includeObjectMeta:
                                  description: IncludeObjectMeta controls whether the ObjectMeta will be included and made available for CIP level policy evalutation. Note that this only gets evaluated iff at least one authority matches.
                                  type: boolean
                                includeSpec:
                                  description: IncludeSpec controls whether resource `Spec` will be included and made available for CIP level policy evaluation. Note that this only gets evaluated iff at least one authority matches. Also note that because Spec may be of a different shape depending on the resource being evaluatied (see MatchResource for filtering) you might want to configure these to match the policy file to ensure the shape of the Spec is what you expect when evaling the policy.
                                  type: boolean
                                includeTypeMeta:
                                  description: IncludeTypeMeta controls whether the TypeMeta will be included and made available for CIP level policy evalutation. Note that this only gets evaluated iff at least one authority matches.
                                  type: boolean
                                type:
                                  description: Which kind of policy this is, currently only rego or cue are supported. Furthermore, only cue is tested :)
                                  type: string
                                url:
                                  description: URL to the policy data.
                                  type: string
                            predicateType:
                              description: PredicateType defines which predicate type to verify. Matches cosign verify-attestation options.
                              type: string
                      ctlog:
                        description: CTLog sets the configuration to verify the authority against a Rekor instance.
                        type: object
                        properties:
                          url:
                            description: URL sets the url to the rekor instance (by default the public rekor.sigstore.dev)
                            type: string
                      key:
                        description: Key defines the type of key to validate the image.
                        type: object
                        properties:
                          data:
                            description: Data contains the inline public key.
                            type: string
                          hashAlgorithm:
                            description: HashAlgorithm always defaults to sha256 if the algorithm hasn't been explicitly set
                            type: string
                          kms:
                            description: KMS contains the KMS url of the public key Supported formats differ based on the KMS system used.
                            type: string
                          secretRef:
                            description: SecretRef sets a reference to a secret with the key.
                            type: object
                            properties:
                              name:
                                description: name is unique within a namespace to reference a secret resource.
                                type: string
                              namespace:
                                description: namespace defines the space within which the secret name must be unique.
                                type: string
                      keyless:
                        description: Keyless sets the configuration to verify the authority against a Fulcio instance.
                        type: object
                        properties:
                          ca-cert:
                            description: CACert sets a reference to CA certificate
                            type: object
                            properties:
                              data:
                                description: Data contains the inline public key.
                                type: string
                              hashAlgorithm:
                                description: HashAlgorithm always defaults to sha256 if the algorithm hasn't been explicitly set
                                type: string
                              kms:
                                description: KMS contains the KMS url of the public key Supported formats differ based on the KMS system used.
                                type: string
                              secretRef:
                                description: SecretRef sets a reference to a secret with the key.
                                type: object
                                properties:
                                  name:
                                    description: name is unique within a namespace to reference a secret resource.
                                    type: string
                                  namespace:
                                    description: namespace defines the space within which the secret name must be unique.
                                    type: string
                          identities:
                            description: Identities sets a list of identities.
                            type: array
                            items:
                              type: object
                              properties:
                                issuer:
                                  description: Issuer defines the issuer for this identity.
                                  type: string
                                issuerRegExp:
                                  description: IssuerRegExp specifies a regular expression to match the issuer for this identity.
                                  type: string
                                subject:
                                  description: Subject defines the subject for this identity.
                                  type: string
                                subjectRegExp:
                                  description: SubjectRegExp specifies a regular expression to match the subject for this identity.
                                  type: string
                          url:
                            description: URL defines a url to the keyless instance.
                            type: string
                      name:
                        description: Name is the name for this authority. Used by the CIP Policy validator to be able to reference matching signature or attestation verifications. If not specified, the name will be authority-<index in array>
                        type: string
                      source:
                        description: Sources sets the configuration to specify the sources from where to consume the signatures.
                        type: array
                        items:
                          type: object
                          properties:
                            oci:
                              description: OCI defines the registry from where to pull the signatures.
                              type: string
                            signaturePullSecrets:
                              description: SignaturePullSecrets is an optional list of references to secrets in the same namespace as the deploying resource for pulling any of the signatures used by this Source.
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                      static:
                        description: Static specifies that signatures / attestations are not validated but instead a static policy is applied against matching images.
                        type: object
                        properties:
                          action:
                            description: Action defines how to handle a matching policy.
                            type: string
                images:
                  description: Images defines the patterns of image names that should be subject to this policy.
                  type: array
                  items:
                    type: object
                    properties:
                      glob:
                        description: Glob defines a globbing pattern.
                        type: string
                match:
                  description: Match allows selecting resources based on their properties.
                  type: array
                  items:
                    type: object
                    properties:
                      group:
                        type: string
                      resource:
                        type: string
                      selector:
                        type: object
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            type: array
                            items:
                              type: object
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  type: array
                                  items:
                                    type: string
                          matchLabels:
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                      version:
                        type: string
                mode:
                  description: Mode controls whether a failing policy will be rejected (not admitted), or if errors are converted to Warnings. enforce - Reject (default) warn - allow but warn
                  type: string
                policy:
                  description: Policy is an optional policy that can be applied against all the successfully validated Authorities. If no authorities pass, this does not even get evaluated, as the Policy is considered failed.
                  type: object
                  properties:
                    configMapRef:
                      description: ConfigMapRef defines the reference to a configMap with the policy definition.
                      type: object
                      properties:
                        name:
                          description: Name is unique within a namespace to reference a configmap resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the configmap name must be unique.
                          type: string
                    data:
                      description: Data contains the policy definition.
                      type: string
                    fetchConfigFile:
                      description: 'FetchConfigFile controls whether ConfigFile will be fetched and made available for CIP level policy evaluation. Note that this only gets evaluated (and hence fetched) iff at least one authority matches. The ConfigFile will then be available in this format: https://github.com/opencontainers/image-spec/blob/main/config.md'
                      type: boolean
                    includeObjectMeta:
                      description: IncludeObjectMeta controls whether the ObjectMeta will be included and made available for CIP level policy evalutation. Note that this only gets evaluated iff at least one authority matches.
                      type: boolean
                    includeSpec:
                      description: IncludeSpec controls whether resource `Spec` will be included and made available for CIP level policy evaluation. Note that this only gets evaluated iff at least one authority matches. Also note that because Spec may be of a different shape depending on the resource being evaluatied (see MatchResource for filtering) you might want to configure these to match the policy file to ensure the shape of the Spec is what you expect when evaling the policy.
                      type: boolean
                    includeTypeMeta:
                      description: IncludeTypeMeta controls whether the TypeMeta will be included and made available for CIP level policy evalutation. Note that this only gets evaluated iff at least one authority matches.
                      type: boolean
                    type:
                      description: Which kind of policy this is, currently only rego or cue are supported. Furthermore, only cue is tested :)
                      type: string
                    url:
                      description: URL to the policy data.
                      type: string