apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "spire.fullname" . }}-agent
  labels:
    app: spire-agent
    {{- include "spire.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: spire-agent
      {{- include "spire.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: spire-agent
        {{- include "spire.selectorLabels" . | nindent 8 }}
    spec:
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "spire.serviceAccountName" . }}-agent
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          # This is a small image with wait-for-it, choose whatever image
          # you prefer that waits for a service to be up. This image is built
          # from https://github.com/lqhl/wait-for-it
          image: {{ .Values.image.waitForIt }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["-t", "30", "{{ include "spire.fullname" . }}-server:{{ .Values.service.server.port }}"]
      containers:
        - name: {{ include "spire.fullname" . }}-agent
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image.repository }}/spire-agent:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["-config", "/run/spire/config/agent.conf"]
          volumeMounts:
            - name: spire-config
              mountPath: /run/spire/config
              readOnly: true
            - name: spire-bundle
              mountPath: /run/spire/bundle
            - name: spire-agent-socket
              mountPath: {{ .Values.agent.sockDir }}
              readOnly: false
            - name: spire-token
              mountPath: /var/run/secrets/tokens
          livenessProbe:
            httpGet:
              path: /live
              port: 8080
            failureThreshold: 2
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources.agent | nindent 12 }}
        {{- if .Values.csi.enabled }}
        # This is the container which runs the SPIFFE CSI driver.
        - name: spiffe-csi-driver
          image: {{ .Values.image.repository }}/spiffe-csi-driver:{{ .Values.image.tagCSI }}
          imagePullPolicy: IfNotPresent
          args: [
            "-workload-api-socket-dir", "{{ .Values.agent.sockDir }}",
            "-csi-socket-path", "/run/spiffe-csi/csi.sock",
          ]
          env:
            # The CSI driver needs a unique node ID. The node name can be
            # used for this purpose.
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            # The volume containing the SPIRE agent socket. The SPIFFE CSI
            # driver will mount this directory into containers.
            - name: spire-agent-socket
              mountPath: {{ .Values.agent.sockDir }}
              readOnly: true
            # The volume that will contain the CSI driver socket shared
            # with the kubelet and the driver registrar.
            - name: spire-csi-socket-dir
              mountPath: /run/spiffe-csi
            # The volume containing mount points for containers.
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
          securityContext:
            privileged: true
        # This container runs the CSI Node Driver Registrar which takes care
        # of all the little details required to register a CSI driver with
        # the kubelet.
        - name: node-driver-registrar
          image: {{ .Values.image.csiRegistrar }}
          imagePullPolicy: IfNotPresent
          args: [
            "-csi-address", "/run/spiffe-csi/csi.sock",
            "-kubelet-registration-path", "/var/lib/kubelet/plugins/csi.spiffe.io/csi.sock",
          ]
          volumeMounts:
            # The registrar needs access to the SPIFFE CSI driver socket
            - name: spire-csi-socket-dir
              mountPath: /run/spiffe-csi
            # The registrar needs access to the Kubelet plugin registration
            # directory
            - name: kubelet-plugin-registration-dir
              mountPath: /registration
        {{- end }}
      volumes:
        - name: spire-config
          configMap:
            name: {{ include "spire.fullname" . }}-agent
        - name: spire-bundle
          configMap:
            name: {{ include "spire.fullname" . }}-bundle
        - name: spire-token
          projected:
            sources:
            - serviceAccountToken:
                path: spire-agent
                expirationSeconds: 7200
                audience: spire-server
        # This volume is used to share the Workload API socket between the CSI
        # driver and SPIRE agent. Note, an emptyDir volume could also be used,
        # however, this can lead to broken bind mounts in the workload
        # containers if the agent pod is restarted (since the emptyDir
        # directory on the node that was mounted into workload containers by
        # the CSI driver belongs to the old pod instance and is no longer
        # valid).
        - name: spire-agent-socket
          hostPath:
            path: {{ .Values.agent.hostDir }}
            type: DirectoryOrCreate
        {{- if .Values.csi.enabled }}
        # This volume is where the socket for kubelet->driver communication lives
        - name: spire-csi-socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi.spiffe.io
            type: DirectoryOrCreate
        # This volume is where the SPIFFE CSI driver mounts volumes
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
        # This volume is where the node-driver-registrar registers the plugin
        # with kubelet
        - name: kubelet-plugin-registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---