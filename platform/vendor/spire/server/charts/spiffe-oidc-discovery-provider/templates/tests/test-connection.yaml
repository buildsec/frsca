{{- $values := merge .Values }}
{{- $host := include "spire-lib.ingress-calculated-name" (dict "Values" .Values "ingress" .Values.ingress) }}
{{- $protocol := "https" }}
{{- $port := .Values.service.ports.https }}
{{- if eq (include "spiffe-oidc-discovery-provider.tls-enabled" .) "false" }}
{{- $protocol = "http" }}
{{- $port = .Values.service.ports.http }}
{{- end }}
{{- if gt (len .Values.ingress.hosts) 0 }}
{{-   $host = (index .Values.ingress.hosts 0).host }}
{{- end }}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "spiffe-oidc-discovery-provider.fullname" . }}-test-connection"
  namespace: {{ include "spiffe-oidc-discovery-provider.namespace" . }}
  labels:
    {{- include "spiffe-oidc-discovery-provider.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  securityContext:
    {{- include "spire-lib.podsecuritycontext" . | nindent 4 }}
  containers:
    - name: curl-service-name
      image: {{ template "spire-lib.image" (dict "image" .Values.tests.bash.image "global" .Values.global) }}
      command: ['curl']
      args: ['-s', '-f', '-k', '{{ $protocol }}://{{ include "spiffe-oidc-discovery-provider.fullname" . }}:{{ $port }}/.well-known/openid-configuration']
      securityContext:
        {{- include "spire-lib.securitycontext" . | nindent 8 }}
    - name: curl-service-name-namespace
      image: {{ template "spire-lib.image" (dict "image" .Values.tests.bash.image "global" .Values.global) }}
      command: ['curl']
      args: ['-s', '-f', '-k', '{{ $protocol }}://{{ include "spiffe-oidc-discovery-provider.fullname" . }}.{{ include "spiffe-oidc-discovery-provider.namespace" . }}:{{ $port }}/.well-known/openid-configuration']
      securityContext:
        {{- include "spire-lib.securitycontext" . | nindent 8 }}
    - name: curl-service-name-namespace-svc-cluster-local
      image: {{ template "spire-lib.image" (dict "image" .Values.tests.bash.image "global" .Values.global) }}
      command: ['curl']
      args: ['-s', '-f', '-k', '{{ $protocol }}://{{ include "spiffe-oidc-discovery-provider.fullname" . }}.{{ include "spiffe-oidc-discovery-provider.namespace" . }}.svc.{{ include "spire-lib.cluster-domain" . }}:{{ $port }}/.well-known/openid-configuration']
      securityContext:
        {{- include "spire-lib.securitycontext" . | nindent 8 }}
    {{- if .Values.ingress.enabled }}
    - name: curl-ingress
      image: {{ template "spire-lib.image" (dict "image" .Values.tests.bash.image "global" .Values.global) }}
      command: ['curl']
      {{- if dig "tests" "tls" "enabled" false $values }}
      {{- if ne (len (dig "tests" "tls" "customCA" "" $values)) 0 }}
      args: ['-s', '-f', '--cacert', '/ca/ca.crt', 'https://{{ $host }}/.well-known/openid-configuration']
      {{- else }}
      args: ['-s', '-f', 'https://{{ $host }}/.well-known/openid-configuration']
      {{- end }}
      {{- if ne (len (dig "tests" "tls" "customCA" "" $values)) 0 }}
      volumeMounts:
        - name: custom-ca
          mountPath: /ca
      {{- end }}
      {{- else }}
      args: ['-s', '-f', 'http://{{ $host }}/.well-known/openid-configuration']
      {{- end }}
      securityContext:
        {{- include "spire-lib.securitycontext" . | nindent 8 }}
    {{- end }}
  {{- if ne (len (dig "tests" "hostAliases" "" $values)) 0 }}
  hostAliases:
    {{- toYaml .Values.tests.hostAliases | nindent 4 }}
  {{- end }}
  {{- if ne (len (dig "tests" "tls" "customCA" "" $values)) 0 }}
  volumes:
    - name: custom-ca
      secret:
        secretName: {{ .Values.tests.tls.customCA }}
  {{- end }}
  restartPolicy: Never
